apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
      app.kubernetes.io/name: db
      app.kubernetes.io/instance: db
      app.kubernetes.io/version: "1.0.0"
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: customers
      app.kubernetes.io/managed-by: helm
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app.kubernetes.io/name: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
      app.kubernetes.io/name: db
      app.kubernetes.io/instance: db
      app.kubernetes.io/version: "1.0.0"
      app.kubernetes.io/component: microservice
      app.kubernetes.io/part-of: customers
      app.kubernetes.io/managed-by: helm  
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: db
    spec:
      containers:
      - image: mysql:5.6.50
        name: db
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi #256Mi
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: root_password   
          - name: MYSQL_DATABASE
            value: db01
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: db_user           
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: db_pwd                
        ports:
        - containerPort: 3306
          name: db
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim          
